& when (@media-common = true) {
& when (@critical = unsure), (@critical) {
    .easycatalogimg-grid {
        display: flex;
        gap: var(--item-gap);
        flex-wrap: wrap;
        margin: 0;

        --item-gap: 0px;
        --item-padding: @easycatalogimg-grid-item__padding;
        --item-margin: @easycatalogimg-grid-item__margin;

        [data-content-type="easycatalogimg"].gap-0 & {
            --item-padding: 0px;
            --item-margin: 0px;
        }

        .item {
            width: ~"calc((100% - var(--item-gap)) / 2 - var(--item-margin) * 2)";
            margin: var(--item-margin);
            padding: var(--item-padding);
        }

        @media (min-width: 768px) {
            .generate-columns(4);
            .generate-columns(@n, @i: 3) when (@i =< @n) {
                &.easycatalogimg-cols-@{i} {
                    .item {
                        width: ~"calc((100% - var(--item-gap) * (@{i} - 1)) / @{i} - var(--item-margin) * 2)";
                    }
                }
                .generate-columns(@n, (@i + 1));
            }
            &.easycatalogimg-cols-5,
            &.easycatalogimg-cols-6 {
                .item {
                    width: ~"calc((100% - var(--item-gap) * 3) / 4 - var(--item-margin) * 2)";
                }
            }
        }

        @media (min-width: 1024px) {
            .generate-columns(6);
            .generate-columns(@n, @i: 5) when (@i =< @n) {
                &.easycatalogimg-cols-@{i} .item {
                    width: ~"calc((100% - var(--item-gap) * (@{i} - 1)) / @{i} - var(--item-margin) * 2)";
                }
                .generate-columns(@n, (@i + 1));
            }
        }
    }
}
}
